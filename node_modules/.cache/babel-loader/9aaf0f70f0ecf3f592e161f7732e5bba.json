{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    popupName: \"edit\",\n    formName: \"form_edit\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empty-name-input\",\n        name: \"nameInput\",\n        className: \"popup__input popup__input_name\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"40\",\n        value: name ? name : \"\",\n        onChange: handleChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"empty-name-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"empty-job-input\",\n        name: \"jobInput\",\n        className: \"popup__input popup__input_job\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"200\",\n        value: description ? description : \"\",\n        onChange: handleChangeDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"empty-job-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","currentUser","useContext","name","setName","useState","description","setDescription","useEffect","about","handleSubmit","e","preventDefault","handleChangeName","target","value","handleChangeDescription"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAA1B,EAA6D;AAAA;;AAEzD,QAAMC,WAAW,GAAGP,KAAK,CAACQ,UAAN,CAAiBN,kBAAjB,CAApB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACW,QAAN,CAAe,EAAf,CAAtC,CAJyD,CAOzD;AACA;;AACAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACN,WAAW,CAACQ,KAAb,CAAd;AACH,GAHD,EAGG,CAACR,WAAD,CAHH;;AAKA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFqB,CAIrB;;AACAZ,IAAAA,YAAY,CAAC;AACTG,MAAAA,IAAI,EAAEA,IADG;AAETM,MAAAA,KAAK,EAAEH;AAFE,KAAD,CAAZ;AAGH;;AAED,WAASO,gBAAT,CAA0BF,CAA1B,EAA6B;AACzBP,IAAAA,OAAO,CAACO,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,uBAAT,CAAiCL,CAAjC,EAAoC;AAChCJ,IAAAA,cAAc,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;AACH;;AAGD,sBACI,QAAC,aAAD;AACI,IAAA,MAAM,EAAEjB,MADZ;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,KAAK,EAAC,2HAHV;AAII,IAAA,SAAS,EAAC,MAJd;AAKI,IAAA,QAAQ,EAAC,WALb;AAMI,IAAA,QAAQ,EAAEW,YANd;AAAA,4BAQI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,kBAFP;AAGI,QAAA,IAAI,EAAC,WAHT;AAII,QAAA,SAAS,EAAC,gCAJd;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,SAAS,EAAC,GANd;AAOI,QAAA,SAAS,EAAC,IAPd;AAQI,QAAA,KAAK,EAAEP,IAAI,GAAGA,IAAH,GAAU,EARzB;AASI,QAAA,QAAQ,EAAEU;AATd;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAsBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,iBAFP;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,SAAS,EAAC,+BAJd;AAKI,QAAA,QAAQ,MALZ;AAKa,QAAA,SAAS,EAAC,GALvB;AAMI,QAAA,SAAS,EAAC,KANd;AAOI,QAAA,KAAK,EAAEP,WAAW,GAAGA,WAAH,GAAiB,EAPvC;AAQI,QAAA,QAAQ,EAAEU;AARd;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAvEQnB,gB;;KAAAA,gB;AAyET,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  \n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({ \n            name: name, \n            about: description });\n    }\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Редактировать профиль\"\n            popupName=\"edit\"\n            formName=\"form_edit\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-name-input\"\n                    name=\"nameInput\" \n                    className=\"popup__input popup__input_name\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"40\"\n                    value={name ? name : \"\"}\n                    onChange={handleChangeName}\n                />\n                <span id=\"empty-name-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-job-input\" \n                    name=\"jobInput\" \n                    className=\"popup__input popup__input_job\" \n                    required minLength=\"2\" \n                    maxLength=\"200\"\n                    value={description ? description : \"\"}\n                    onChange={handleChangeDescription} \n                />\n                <span id=\"empty-job-input-error\"></span>  \n            </div>\n        </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}