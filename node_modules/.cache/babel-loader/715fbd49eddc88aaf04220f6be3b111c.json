{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{CurrentUserContext}from'../contexts/CurrentUserContext';function Card(_ref){var card=_ref.card,onCardClick=_ref.onCardClick,onCardLike=_ref.onCardLike,onDeleteCard=_ref.onDeleteCard;var currentUser=React.useContext(CurrentUserContext);// Определяем, являемся ли мы владельцем текущей карточки\nvar isOwn=card.owner._id===currentUser._id;// Создаём переменную, которую после зададим в `className` для кнопки удаления\nvar cardDeleteButtonClassName=\"photo-grid__delete-btn \".concat(isOwn?'photo-grid__delete-btn_visible':'photo-grid__delete-btn_hidden');// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Создаём переменную, которую после зададим в `className` для кнопки лайка\nvar cardLikeButtonClassName=\"photo-grid__like-btn \".concat(isLiked?'photo-grid__like-btn_active':'');function handleCardClick(){onCardClick(card);}function handleLikeClick(){onCardLike(card);}function handleDeleteClick(){onDeleteCard(card);}return/*#__PURE__*/_jsxs(\"div\",{className:\"photo-grid__item\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:cardDeleteButtonClassName,onClick:handleDeleteClick}),/*#__PURE__*/_jsx(\"img\",{className:\"photo-grid__image\",src:card.link,alt:card.name,onClick:handleCardClick}),/*#__PURE__*/_jsxs(\"div\",{className:\"photo-grid__rectangle\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"photo-grid__title\",children:card.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"photo-grid__like-place\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:cardLikeButtonClassName,onClick:handleLikeClick}),/*#__PURE__*/_jsx(\"span\",{className:\"photo-grid__like-count\",children:card.likes.length})]})]})]});}export default Card;","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","onCardClick","onCardLike","onDeleteCard","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleCardClick","handleLikeClick","handleDeleteClick","link","name","length"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,gCAAnC,CAEA,QAASC,CAAAA,IAAT,MAA+D,IAA/CC,CAAAA,IAA+C,MAA/CA,IAA+C,CAAzCC,WAAyC,MAAzCA,WAAyC,CAA5BC,UAA4B,MAA5BA,UAA4B,CAAhBC,YAAgB,MAAhBA,YAAgB,CAE3D,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,UAAN,CAAiBP,kBAAjB,CAApB,CAEA;AACA,GAAMQ,CAAAA,KAAK,CAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,GAAmBJ,WAAW,CAACI,GAA7C,CAEA;AACA,GAAMC,CAAAA,yBAAyB,kCACLH,KAAK,CAAG,gCAAH,CAAsC,+BADtC,CAA/B,CAIA;AACA,GAAMI,CAAAA,OAAO,CAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACL,GAAF,GAAUJ,WAAW,CAACI,GAA1B,EAAjB,CAAhB,CAEA;AACA,GAAMM,CAAAA,uBAAuB,gCAA4BJ,OAAO,CAAG,6BAAH,CAAmC,EAAtE,CAA7B,CAEA,QAASK,CAAAA,eAAT,EAA2B,CACvBd,WAAW,CAACD,IAAD,CAAX,CACH,CAED,QAASgB,CAAAA,eAAT,EAA2B,CAC7Bd,UAAU,CAACF,IAAD,CAAV,CACG,CAED,QAASiB,CAAAA,iBAAT,EAA6B,CAC/Bd,YAAY,CAACH,IAAD,CAAZ,CACG,CAED,mBACI,aAAK,SAAS,CAAC,kBAAf,wBACA,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAES,yBAAjC,CAA4D,OAAO,CAAEQ,iBAArE,EADA,cAEA,YAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEjB,IAAI,CAACkB,IAA7C,CAAmD,GAAG,CAAElB,IAAI,CAACmB,IAA7D,CAAmE,OAAO,CAAEJ,eAA5E,EAFA,cAGI,aAAK,SAAS,CAAC,uBAAf,wBACI,WAAI,SAAS,CAAC,mBAAd,UAAmCf,IAAI,CAACmB,IAAxC,EADJ,cAEI,aAAK,SAAS,CAAC,wBAAf,wBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEL,uBAAjC,CAA0D,OAAO,CAAEE,eAAnE,EADJ,cAEI,aAAM,SAAS,CAAC,wBAAhB,UAA0ChB,IAAI,CAACW,KAAL,CAAWS,MAArD,EAFJ,GAFJ,GAHJ,GADJ,CAaH,CAED,cAAerB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onDeleteCard }) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n    `photo-grid__delete-btn ${isOwn ? 'photo-grid__delete-btn_visible' : 'photo-grid__delete-btn_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (`photo-grid__like-btn ${isLiked ? 'photo-grid__like-btn_active' : ''}`);\n\n    function handleCardClick() {\n        onCardClick(card);\n    } \n\n    function handleLikeClick() {\n\t\tonCardLike(card);\n    }\n\n    function handleDeleteClick() {\n\t\tonDeleteCard(card);\n    }\n\n    return (\n        <div className=\"photo-grid__item\">\n        <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n        <img className=\"photo-grid__image\" src={card.link} alt={card.name} onClick={handleCardClick} />\n            <div className=\"photo-grid__rectangle\">\n                <h2 className=\"photo-grid__title\">{card.name}</h2>\n                <div className=\"photo-grid__like-place\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                    <span className=\"photo-grid__like-count\">{card.likes.length}</span>\n                </div>\n            </div> \n        </div>    \n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}