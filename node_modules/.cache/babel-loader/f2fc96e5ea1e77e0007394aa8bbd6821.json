{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/vatc/Desktop/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import PopupWithForm from'../components/PopupWithForm';import{CurrentUserContext}from'../contexts/CurrentUserContext';function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser;var currentUser=React.useContext(CurrentUserContext);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser]);function handleSubmit(e){// Запрещаем браузеру переходить по адресу формы\ne.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nonUpdateUser({name:name,about:description});}function handleChangeName(e){setName(e.target.value);}function handleChangeDescription(e){setDescription(e.target.value);}return/*#__PURE__*/_jsxs(PopupWithForm,{isOpen:isOpen,onClose:onClose,title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",popupName:\"edit\",formName:\"form_edit\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"popup__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"empty-name-input\",name:\"nameInput\",className:\"popup__input popup__input_name\",required:true,minLength:\"2\",maxLength:\"40\",value:name?name:\"\",onChange:handleChangeName}),/*#__PURE__*/_jsx(\"span\",{id:\"empty-name-input-error\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"popup__field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"empty-job-input\",name:\"jobInput\",className:\"popup__input popup__input_job\",required:true,minLength:\"2\",maxLength:\"200\",value:description?description:\"\",onChange:handleChangeDescription}),/*#__PURE__*/_jsx(\"span\",{id:\"empty-job-input-error\"})]})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","currentUser","useContext","useState","name","setName","description","setDescription","useEffect","about","handleSubmit","e","preventDefault","handleChangeName","target","value","handleChangeDescription"],"mappings":"wPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,kBAAT,KAAmC,gCAAnC,CAEA,QAASC,CAAAA,gBAAT,MAA6D,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,CAAzBC,OAAyB,MAAzBA,OAAyB,CAAhBC,YAAgB,MAAhBA,YAAgB,CAEzD,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,UAAN,CAAiBN,kBAAjB,CAApB,CAFyD,oBAGjCF,KAAK,CAACS,QAAN,CAAe,EAAf,CAHiC,oDAGlDC,IAHkD,qBAG5CC,OAH4C,0CAInBX,KAAK,CAACS,QAAN,CAAe,EAAf,CAJmB,qDAIlDG,WAJkD,qBAIrCC,cAJqC,qBAOzD;AACA;AACAb,KAAK,CAACc,SAAN,CAAgB,UAAM,CAClBH,OAAO,CAACJ,WAAW,CAACG,IAAb,CAAP,CACAG,cAAc,CAACN,WAAW,CAACQ,KAAb,CAAd,CACH,CAHD,CAGG,CAACR,WAAD,CAHH,EAKA,QAASS,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrB;AACAA,CAAC,CAACC,cAAF,GAEA;AACAZ,YAAY,CAAC,CACTI,IAAI,CAAEA,IADG,CAETK,KAAK,CAAEH,WAFE,CAAD,CAAZ,CAGH,CAED,QAASO,CAAAA,gBAAT,CAA0BF,CAA1B,CAA6B,CACzBN,OAAO,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAP,CACH,CAED,QAASC,CAAAA,uBAAT,CAAiCL,CAAjC,CAAoC,CAChCJ,cAAc,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd,CACH,CAGD,mBACI,MAAC,aAAD,EACI,MAAM,CAAEjB,MADZ,CAEI,OAAO,CAAEC,OAFb,CAGI,KAAK,CAAC,2HAHV,CAII,SAAS,CAAC,MAJd,CAKI,QAAQ,CAAC,WALb,CAMI,QAAQ,CAAEW,YANd,wBAQI,aAAK,SAAS,CAAC,cAAf,wBACI,cACI,IAAI,CAAC,MADT,CAEI,EAAE,CAAC,kBAFP,CAGI,IAAI,CAAC,WAHT,CAII,SAAS,CAAC,gCAJd,CAKI,QAAQ,KALZ,CAMI,SAAS,CAAC,GANd,CAOI,SAAS,CAAC,IAPd,CAQI,KAAK,CAAEN,IAAI,CAAGA,IAAH,CAAU,EARzB,CASI,QAAQ,CAAES,gBATd,EADJ,cAYI,aAAM,EAAE,CAAC,wBAAT,EAZJ,GARJ,cAsBI,aAAK,SAAS,CAAC,cAAf,wBACI,cACI,IAAI,CAAC,MADT,CAEI,EAAE,CAAC,iBAFP,CAGI,IAAI,CAAC,UAHT,CAII,SAAS,CAAC,+BAJd,CAKI,QAAQ,KALZ,CAKa,SAAS,CAAC,GALvB,CAMI,SAAS,CAAC,KANd,CAOI,KAAK,CAAEP,WAAW,CAAGA,WAAH,CAAiB,EAPvC,CAQI,QAAQ,CAAEU,uBARd,EADJ,cAWI,aAAM,EAAE,CAAC,uBAAT,EAXJ,GAtBJ,GADJ,CAsCH,CAED,cAAenB,CAAAA,gBAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  \n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({ \n            name: name, \n            about: description });\n    }\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Редактировать профиль\"\n            popupName=\"edit\"\n            formName=\"form_edit\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-name-input\"\n                    name=\"nameInput\" \n                    className=\"popup__input popup__input_name\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"40\"\n                    value={name ? name : \"\"}\n                    onChange={handleChangeName}\n                />\n                <span id=\"empty-name-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-job-input\" \n                    name=\"jobInput\" \n                    className=\"popup__input popup__input_job\" \n                    required minLength=\"2\" \n                    maxLength=\"200\"\n                    value={description ? description : \"\"}\n                    onChange={handleChangeDescription} \n                />\n                <span id=\"empty-job-input-error\"></span>  \n            </div>\n        </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}