{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [imageData, setImageData] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState(\"\");\n  const [email, setEmail] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()]).then(res => {\n      console.log(res);\n      setCurrentUser(res[0]);\n      setCards(res[1]);\n    }).catch(err => console.error(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsOpenPopupAvatar(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsOpenPopupPlace(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsOpenPopupProfile(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.error(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(c => c._id !== card._id));\n    }).catch(err => console.error(err));\n  }\n\n  function handleUpdateUser(userData) {\n    api.setUserInfoOnServer(userData.name, userData.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.editProfileAvatar(userData.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleAddPlaceSubmit(cardData) {\n    // console.log(cards);\n    api.addCards(cardData.name, cardData.link).then(card => {\n      console.log(cards);\n      setCards([card, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setImageData(card);\n  }\n\n  function closeAllPopups() {\n    setIsOpenPopupAvatar(false);\n    setIsOpenPopupProfile(false);\n    setIsOpenPopupPlace(false);\n    setSelectedCard(null);\n  }\n\n  function onSignOut() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onClick: onSignOut,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardList: cards,\n            onCardLike: handleCardLike,\n            onDeleteCard: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegisterSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLoggin: handleLoginSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: imageData,\n        isOpen: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup popup__submit\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"popup__close-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"popup__title popup__title_submit\",\n              children: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              name: \"submit\",\n              className: \"popup__form popup__form_update\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"popup__save-btn popup__save-btn_confirm\",\n                children: \"\\u0414\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"M3jbZBMkIogvrld/20vJqmuopXY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/App.js"],"names":["React","Header","Footer","Main","AddPlacePopup","EditProfilePopup","EditAvatarPopup","ImagePopup","CurrentUserContext","api","App","isEditAvatarPopupOpen","setIsOpenPopupAvatar","useState","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","selectedCard","setSelectedCard","imageData","setImageData","cards","setCards","currentUser","setCurrentUser","email","setEmail","loggedIn","setLoggedIn","useEffect","Promise","all","getUserInfoFromServer","getCardsInformation","then","res","console","log","catch","err","error","handleEditAvatarClick","handleAddPlaceClick","handleEditProfileClick","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","userData","setUserInfoOnServer","name","about","closeAllPopups","handleUpdateAvatar","editProfileAvatar","avatar","handleAddPlaceSubmit","cardData","addCards","link","handleCardClick","onSignOut","localStorage","removeItem","history","push","handleRegisterSubmit","handleLoginSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [imageData, setImageData] = React.useState(null)\n    \n    const [cards, setCards] = React.useState([])\n    const [currentUser,  setCurrentUser] = React.useState(\"\"); \n\n    const [email, setEmail] = useState('');\n    const [loggedIn, setLoggedIn] = useState(false);\n        \n    React.useEffect(() => {\n        Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()])\n            .then(res => {\n                console.log(res)\n                setCurrentUser(res[0]);\n                setCards(res[1]);\n            })\n            .catch((err) => console.error(err));\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true);\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch((err) => console.error(err));\n    } \n\n    function handleCardDelete(card) {\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter(c => c._id !== card._id));\n        })\n        .catch((err) => console.error(err));\n    }\n    \n    function handleUpdateUser(userData) {\n        api.setUserInfoOnServer(userData.name, userData.about)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups();\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.editProfileAvatar(userData.avatar)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        // console.log(cards);\n        api.addCards(cardData.name, cardData.link)\n            .then(card => {\n                console.log(cards)\n                setCards([card, ...cards]);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleCardClick(card) {        \n        setSelectedCard(true);\n        setImageData(card);\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupAvatar(false);\n        setIsOpenPopupProfile(false);\n        setIsOpenPopupPlace(false);\n        setSelectedCard(null);\n    }\n\n    function onSignOut() {\n        localStorage.removeItem('token');\n        setLoggedIn(false)\n        history.push('/sign-in')\n    }\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header \n                    email={email}\n                    onClick={onSignOut}\n                    loggedIn={loggedIn}\n                />\n\n                <Switch>\n                    <ProtectedRoute exact path='/' loggedIn={loggedIn}>\n                        <Main\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onCardClick={handleCardClick}\n                            onCardList={cards}\n                            onCardLike={handleCardLike}\n                            onDeleteCard={handleCardDelete}\n                        />  \n                        <Footer />\n                    </ProtectedRoute>  \n                    <Route path=\"/sign-up\">\n                        <Register\n                            onRegister={handleRegisterSubmit}\n                        />\n                    </Route>\n                    <Route path=\"/sign-in\">\n                        <Login\n                            onLoggin={handleLoginSubmit}\n                        />\n                    </Route>\n                    <Route>\n                        {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n                    </Route>\n                </Switch>    \n\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser}\n                /> \n\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar}\n                /> \n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddCard={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={imageData}\n                    isOpen={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <div className=\"popup popup__submit\"> \n                    <div className=\"popup__container\"> \n                        <button type=\"button\" className=\"popup__close-btn\"></button>  \n                        <div className=\"popup__content\"> \n                            <h2 className=\"popup__title popup__title_submit\">Вы уверены?</h2> \n                            <form name=\"submit\" className=\"popup__form popup__form_update\"> \n                                <button type=\"submit\" className=\"popup__save-btn popup__save-btn_confirm\">Да</button>  \n                            </form> \n                        </div> \n                    </div> \n                </div> \n\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}