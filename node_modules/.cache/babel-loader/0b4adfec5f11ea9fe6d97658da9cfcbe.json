{"ast":null,"code":"import React from'react';import PopupWithForm from'./PopupWithForm';import{CurrentUserContext}from'../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";function EditAvatarPopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateAvatar=_ref.onUpdateAvatar;var inputAvatarRef=React.useRef(\"\");function handleSubmit(e){e.preventDefault();onUpdateAvatar({avatar:inputAvatarRef.current.value});}return/*#__PURE__*/_jsx(PopupWithForm,{isOpen:isOpen,onClose:onClose,title:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",popupName:\"avatar\",formName:\"form_update\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"input\",{className:\"popup__input popup__input_link-avatar popup__input_link\",type:\"url\",name:\"avatar\",ref:inputAvatarRef,required:true})});}export default EditAvatarPopup;","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","inputAvatarRef","useRef","handleSubmit","e","preventDefault","avatar","current","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,kBAAT,KAAmC,gCAAnC,C,2CAEA,QAASC,CAAAA,eAAT,MAA8D,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAjBC,cAAiB,MAAjBA,cAAiB,CAE1D,GAAMC,CAAAA,cAAc,CAAGP,KAAK,CAACQ,MAAN,CAAa,EAAb,CAAvB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACrBA,CAAC,CAACC,cAAF,GACAL,cAAc,CAAC,CACXM,MAAM,CAAEL,cAAc,CAACM,OAAf,CAAuBC,KADpB,CAAD,CAAd,CAGH,CAED,mBACI,KAAC,aAAD,EACI,MAAM,CAAEV,MADZ,CAEI,OAAO,CAAEC,OAFb,CAGI,KAAK,CAAC,uFAHV,CAII,SAAS,CAAC,QAJd,CAKI,QAAQ,CAAC,aALb,CAMI,QAAQ,CAAEI,YANd,uBAQI,cACI,SAAS,CAAC,yDADd,CAEI,IAAI,CAAC,KAFT,CAGI,IAAI,CAAC,QAHT,CAII,GAAG,CAAEF,cAJT,CAKI,QAAQ,KALZ,EARJ,EADJ,CAkBH,CAED,cAAeJ,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose,  onUpdateAvatar}) {\n  \n    const inputAvatarRef = React.useRef(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onUpdateAvatar({ \n            avatar: inputAvatarRef.current.value  \n        });\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Обновить аватар\"\n            popupName=\"avatar\"\n            formName=\"form_update\"\n            onSubmit={handleSubmit}\n        >\n            <input \n                className=\"popup__input popup__input_link-avatar popup__input_link\" \n                type=\"url\" \n                name=\"avatar\" \n                ref={inputAvatarRef}\n                required \n            />   \n        </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}