{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/Auth';\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [imageData, setImageData] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState(\"\");\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [isRequestSuccessful, setisRequestSuccessful] = React.useState(false);\n  const BASE_URL = 'https://auth.nomoreparties.co';\n\n  const getContent = token => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  };\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()]).then(res => {\n      // console.log(res)\n      setCurrentUser(res[0]);\n      setCards(res[1]);\n    }).catch(err => console.error(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsOpenPopupAvatar(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsOpenPopupPlace(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsOpenPopupProfile(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => console.error(err));\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(c => c._id !== card._id));\n    }).catch(err => console.error(err));\n  }\n\n  function handleUpdateUser(userData) {\n    api.setUserInfoOnServer(userData.name, userData.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.editProfileAvatar(userData.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleAddPlaceSubmit(cardData) {\n    // console.log(cards);\n    api.addCards(cardData.name, cardData.link).then(card => {\n      setCards([card, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.error(err));\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(true);\n    setImageData(card);\n  }\n\n  function closeAllPopups() {\n    setIsOpenPopupAvatar(false);\n    setIsOpenPopupProfile(false);\n    setIsOpenPopupPlace(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleRegister(email, password) {\n    auth.register(email, password).then(res => {\n      if (res.data) {\n        setisRequestSuccessful(true);\n        setIsInfoTooltipOpen(true);\n        history.push('/sign-in');\n      }\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`); // setisRequestSuccessful(false);\n\n      setIsInfoTooltipOpen(true);\n    });\n  }\n\n  const handleLogin = (email, password) => {\n    auth.authorize(email, password).then(res => {\n      if (res.token) {\n        setLoggedIn(true);\n        setisRequestSuccessful(true);\n        setIsInfoTooltipOpen(true);\n        localStorage.setItem('jwt', res.token);\n        history.push('/');\n      }\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n      setIsInfoTooltipOpen(true);\n      setisRequestSuccessful(false);\n    });\n  };\n\n  function handleLogout() {\n    setLoggedIn(false);\n    setEmail(email);\n    localStorage.removeItem('jwt');\n    history.push('/sign-in');\n  }\n\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      getContent(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true); // setEmail(res.data.email)\n\n          history.push('/');\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, []); // React.useEffect(() => {\n  //     if (loggedIn) {\n  //       history.push(\"/\");\n  //     }\n  //   }, [loggedIn]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        loggedOut: handleLogout,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardList: cards,\n            onCardLike: handleCardLike,\n            onDeleteCard: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: imageData,\n        isOpen: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isRequestSuccessful: isRequestSuccessful,\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"uMxmfxhnYL/3ldOBpfM/ZOjebEQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vatc/Desktop/praktikum/react-mesto-auth/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","useHistory","Header","Footer","Main","AddPlacePopup","EditProfilePopup","EditAvatarPopup","ImagePopup","CurrentUserContext","api","ProtectedRoute","Login","Register","InfoTooltip","auth","App","history","isEditAvatarPopupOpen","setIsOpenPopupAvatar","useState","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","selectedCard","setSelectedCard","imageData","setImageData","cards","setCards","currentUser","setCurrentUser","loggedIn","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","email","setEmail","isRequestSuccessful","setisRequestSuccessful","BASE_URL","getContent","token","fetch","method","headers","then","res","ok","json","Promise","reject","status","useEffect","all","getUserInfoFromServer","getCardsInformation","catch","err","console","error","handleEditAvatarClick","handleAddPlaceClick","handleEditProfileClick","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","userData","setUserInfoOnServer","name","about","closeAllPopups","handleUpdateAvatar","editProfileAvatar","avatar","handleAddPlaceSubmit","cardData","addCards","link","handleCardClick","handleRegister","password","register","data","push","log","handleLogin","authorize","localStorage","setItem","handleLogout","removeItem","handleTokenCheck","jwt","getItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/Auth';\n\nfunction App() {\n\n    const history = useHistory();\n\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [imageData, setImageData] = React.useState(null)\n    \n    const [cards, setCards] = React.useState([])\n    const [currentUser,  setCurrentUser] = React.useState(\"\"); \n\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [isRequestSuccessful, setisRequestSuccessful] = React.useState(false);\n\n    const BASE_URL = 'https://auth.nomoreparties.co';\n        \n    const getContent = (token) => {\n        return fetch(`${BASE_URL}/users/me`, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n        })\n        .then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n          return Promise.reject(`Ошибка: ${res.status}`);\n        })\n      }\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()])\n            .then(res => {\n                // console.log(res)\n                setCurrentUser(res[0]);\n                setCards(res[1]);\n            })\n            .catch((err) => console.error(err));\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true);\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch((err) => console.error(err));\n    } \n\n    function handleCardDelete(card) {\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter(c => c._id !== card._id));\n        })\n        .catch((err) => console.error(err));\n    }\n    \n    function handleUpdateUser(userData) {\n        api.setUserInfoOnServer(userData.name, userData.about)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups();\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.editProfileAvatar(userData.avatar)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        // console.log(cards);\n        api.addCards(cardData.name, cardData.link)\n            .then(card => {\n                setCards([card, ...cards]);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleCardClick(card) {        \n        setSelectedCard(true);\n        setImageData(card);\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupAvatar(false);\n        setIsOpenPopupProfile(false);\n        setIsOpenPopupPlace(false);\n        setSelectedCard(null);\n        setIsInfoTooltipOpen(false)\n    }\n\n    function handleRegister(email, password) {\n        auth.register(email, password)\n        .then((res) => {\n            if (res.data) {\n                setisRequestSuccessful(true);\n                setIsInfoTooltipOpen(true);\n                history.push('/sign-in');\n            }\n        })\n        .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n            // setisRequestSuccessful(false);\n            setIsInfoTooltipOpen(true);\n        })\n    }\n\n    const handleLogin = (email, password) => {\n        auth.authorize(email, password)\n            .then((res) => {\n                if (res.token) {\n                    setLoggedIn(true);\n                    setisRequestSuccessful(true);\n                    setIsInfoTooltipOpen(true);\n                    localStorage.setItem('jwt', res.token);\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n                setIsInfoTooltipOpen(true);\n                setisRequestSuccessful(false);\n            })\n    }\n    \n    function handleLogout() {\n        setLoggedIn(false)\n        setEmail(email)\n        localStorage.removeItem('jwt')\n        history.push('/sign-in')\n    }\n\n    function handleTokenCheck() {\n        const jwt = localStorage.getItem('jwt')\n        if (jwt) {\n          getContent(jwt)\n            .then((res) => {\n                if (res) {\n                    setLoggedIn(true)\n                    // setEmail(res.data.email)\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n              console.log(err)\n            })\n        }\n      }\n    \n    React.useEffect(() => {\n        handleTokenCheck()\n      }, [])\n\n    // React.useEffect(() => {\n    //     if (loggedIn) {\n    //       history.push(\"/\");\n    //     }\n    //   }, [loggedIn]);\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header \n                    email={email} \n                    loggedOut={handleLogout} \n                    loggedIn={loggedIn}\n                />\n                    <Switch>\n                        \n                        <ProtectedRoute exact path='/' loggedIn={loggedIn}>\n\n                            <Main\n                                onEditAvatar={handleEditAvatarClick}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onCardClick={handleCardClick}\n                                onCardList={cards}\n                                onCardLike={handleCardLike}\n                                onDeleteCard={handleCardDelete}\n                            />  \n                            <Footer />\n\n                        </ProtectedRoute> \n\n                        <Route path='/sign-in'>\n                            <Login handleLogin={handleLogin} setEmail={setEmail} />\n                        </Route>\n\n                        <Route path='/sign-up'>\n                            <Register handleRegister={handleRegister} />\n                        </Route>\n\n                        <Route>\n                            {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                        </Route>\n                    </Switch>\n                    \n\n\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser}\n                /> \n\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar}\n                /> \n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddCard={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={imageData}\n                    isOpen={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <InfoTooltip \n                    isRequestSuccessful={isRequestSuccessful} \n                    isOpen={isInfoTooltipOpen} \n                    onClose={closeAllPopups} \n                />\n\n\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}