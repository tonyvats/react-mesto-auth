{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onDeleteCard","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","link","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","onCardList","avatar","about","map","PopupWithForm","isOpen","onClose","title","submitButton","popupName","formName","children","onSubmit","method","AddPlacePopup","onAddCard","useState","setName","setLink","useEffect","e","preventDefault","id","placeholder","required","minLength","maxLength","onChange","target","value","EditProfilePopup","onUpdateUser","description","setDescription","EditAvatarPopup","onUpdateAvatar","inputAvatarRef","useRef","setAvatar","current","ref","ImagePopup","api","config","this","_url","url","_headers","headers","fetch","body","JSON","stringify","then","res","ok","json","Promise","reject","status","cardId","like","App","isEditAvatarPopupOpen","setIsOpenPopupAvatar","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","selectedCard","setSelectedCard","imageData","setImageData","cards","setCards","setCurrentUser","closeAllPopups","all","getUserInfoFromServer","getCardsInformation","console","log","catch","err","error","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","userData","setUserInfoOnServer","editProfileAvatar","cardData","addCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff3b35c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"изображение лого\" /> \n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\"> \n        <p className=\"footer__copyright\">&copy;&#160;2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onDeleteCard }) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n    `photo-grid__delete-btn ${isOwn ? 'photo-grid__delete-btn_visible' : 'photo-grid__delete-btn_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (`photo-grid__like-btn ${isLiked ? 'photo-grid__like-btn_active' : ''}`);\n\n    function handleCardClick() {\n        onCardClick(card);\n    } \n\n    function handleLikeClick() {\n\t\tonCardLike(card);\n    }\n\n    function handleDeleteClick() {\n\t\tonDeleteCard(card);\n    }\n\n    return (\n        <div className=\"photo-grid__item\">\n        <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n        <img className=\"photo-grid__image\" src={card.link} alt={card.name} onClick={handleCardClick} />\n            <div className=\"photo-grid__rectangle\">\n                <h2 className=\"photo-grid__title\">{card.name}</h2>\n                <div className=\"photo-grid__like-place\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                    <span className=\"photo-grid__like-count\">{card.likes.length}</span>\n                </div>\n            </div> \n        </div>    \n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardList, onCardLike, onDeleteCard }) {\n    \n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                 <div className=\"profile__avatar-container\" onClick={onEditAvatar}>                    \n                    <img className=\"profile__avatar-icon\" src={currentUser.avatar} alt=\"фото аватара\" />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__title\">{currentUser.name}</h1>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                    <button type=\"button\" className=\"profile__edit-btn\" onClick={onEditProfile}></button>\n                </div>\n                <button type=\"button\" className=\"profile__add-btn\" onClick={onAddPlace} />\n            </section>\n            <section className=\"photo-grid\">\n                { \n                    onCardList.map((card) => (\n                        <Card \n                            key={card._id}\n                            card={card}\n                            onCardClick={onCardClick}\n                            onCardLike={onCardLike}\n                            onDeleteCard={onDeleteCard}\n                        />))           \n                }\n            </section>\n        </main>       \n    );\n\n}\n\nexport default Main;","import React from 'react';\n\nfunction PopupWithForm({ isOpen, onClose, title, submitButton, popupName, formName, children, onSubmit  }) {\n  return (\n    <div className={`popup popup__${popupName} ${isOpen && \"popup_opened\"}`}>\n        <div className=\"popup__container\">\n            <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n            <div className=\"popup__content\">\n                <h2 className=\"popup__title\">{title}</h2>\n                <form name=\"edit\" method=\"POST\" className={`popup__form popup__${formName}`} onSubmit={onSubmit}>\n                    {children}\n                    <button type=\"submit\" className=\"popup__save-btn\" onClick={submitButton}>Сохранить</button> \n                </form>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose,  onAddCard}) {\n      \n    const [name, setName] = React.useState(\"\");\n    const [link, setLink] = React.useState(\"\");\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n    \n      function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onAddCard({\n          name: name,\n          link: link\n        });\n    }\n\n\tReact.useEffect(() => { \n        setLink(\"\");\n        setName(\"\");\n  \t}, [isOpen]); \n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Новое место\"\n            popupName=\"update\"\n            formName=\"form_update\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-title-input\" \n                    name=\"name\" \n                    placeholder=\"Название\" \n                    className=\"popup__input popup__input_title\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"30\"\n                    onChange={handleChangeName}  \n                    value={name ? name : \"\"}  \n                />\n                <span id=\"empty-title-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"url\" \n                    id=\"empty-link-input\" \n                    name=\"link\" \n                    placeholder=\"Ссылка на картинку\" \n                    className=\"popup__input popup__input_link\" \n                    required\n                    onChange={handleChangeLink} \n                    value={link ? link : \"\"}\n                />   \n                <span id=\"empty-link-input-error\"></span> \n            </div> \n        </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  \n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({ \n            name: name, \n            about: description });\n    }\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Редактировать профиль\"\n            popupName=\"edit\"\n            formName=\"form_edit\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-name-input\"\n                    name=\"nameInput\" \n                    className=\"popup__input popup__input_name\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"40\"\n                    value={name ? name : \"\"}\n                    onChange={handleChangeName}\n                />\n                <span id=\"empty-name-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-job-input\" \n                    name=\"jobInput\" \n                    className=\"popup__input popup__input_job\" \n                    required minLength=\"2\" \n                    maxLength=\"200\"\n                    value={description ? description : \"\"}\n                    onChange={handleChangeDescription} \n                />\n                <span id=\"empty-job-input-error\"></span>  \n            </div>\n        </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose,  onUpdateAvatar}) {\n  \n    const currentUser = React.useContext(CurrentUserContext);\n    const inputAvatarRef = React.useRef(\"\");\n    const [avatar, setAvatar] = React.useState('');\n\n    React.useEffect(() => {\n        setAvatar(currentUser.avatar);\n    }, [currentUser]);\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onUpdateAvatar({ \n            avatar: inputAvatarRef.current.value  \n        });\n    }\n\n    function handleChangeAvatar(e) {\n        setAvatar(e.target.value);\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Обновить аватар\"\n            popupName=\"avatar\"\n            formName=\"form_update\"\n            onSubmit={handleSubmit}\n        >\n            <input \n                className=\"popup__input popup__input_link-avatar popup__input_link\" \n                type=\"url\" \n                name=\"avatar\" \n                value={avatar ? avatar : \"\"}\n                ref={inputAvatarRef}\n                onChange={handleChangeAvatar}\n                required \n            />   \n        </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nfunction ImagePopup({ card, isOpen, onClose }) {\n    return (\n        <div className={`popup popup__photo ${isOpen && \"popup_opened\"}`}>\n            <div className=\"popup__container\">\n                <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n                <img className=\"popup__photo-fullscreen\" src={card?.link} alt={card?.name} />\n                <h2 className=\"popup__photo-title\">{card?.name}</h2>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    editProfileAvatar(avatar) {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"PATCH\",\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: avatar\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getUserInfoFromServer() {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getAvatarFromServer() {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    setUserInfoOnServer(name, about) {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getCardsInformation() {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    addCards(name, link) {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}${'cards/'}${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,   \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n\n    changeLikeCardStatus(cardId, like) {\n        return fetch(`${this._url}${'cards/likes/'}${cardId}`, {\n            method: like ? \"PUT\" : \"DELETE\",\n            headers: this._headers      \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n}\n\n\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n    headers: {\n        \"Authorization\": \"6b4f0e7a-6b81-4fab-971b-4da07f00c7c0\",\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [imageData, setImageData] = React.useState(null)\n    \n    const [cards, setCards] = React.useState([])\n    const [currentUser,  setCurrentUser] = React.useState(\"\"); \n        \n    React.useEffect(() => {\n        Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()])\n            .then(res => {\n                console.log(res)\n                setCurrentUser(res[0]);\n                setCards(res[1]);\n            })\n            .catch((err) => console.error(err));\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true);\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch((err) => console.error(err));\n    } \n\n    function handleCardDelete(card) {\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter(c => c._id !== card._id));\n        })\n        .catch((err) => console.error(err));\n    }\n    \n    function handleUpdateUser(userData) {\n        api.setUserInfoOnServer(userData.name, userData.about)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups();\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.editProfileAvatar(userData.avatar)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        // console.log(cards);\n        api.addCards(cardData.name, cardData.link)\n            .then(card => {\n                console.log(cards)\n                setCards([card, ...cards]);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleCardClick(card) {        \n        setSelectedCard(true);\n        setImageData(card);\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupAvatar(false);\n        setIsOpenPopupProfile(false);\n        setIsOpenPopupPlace(false);\n        setSelectedCard(null);\n    }\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />    \n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    onCardList={cards}\n                    onCardLike={handleCardLike}\n                    onDeleteCard={handleCardDelete}\n                />  \n                <Footer />\n\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser}\n                /> \n\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar}\n                /> \n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddCard={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={imageData}\n                    isOpen={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <div className=\"popup popup__submit\">\n                    <div className=\"popup__container\">\n                        <button type=\"button\" className=\"popup__close-btn\"></button> \n                        <div className=\"popup__content\">\n                            <h2 className=\"popup__title popup__title_submit\">Вы уверены?</h2>\n                            <form name=\"submit\" className=\"popup__form popup__form_update\">\n                                <button type=\"submit\" className=\"popup__save-btn popup__save-btn_confirm\">Да</button> \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}