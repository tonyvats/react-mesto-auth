{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/api.js","components/ProtectedRoute.js","components/Login.js","components/Register.js","images/success.svg","images/error.svg","images/close_icon.svg","components/InfoTooltip.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","loginNavBar","className","path","to","exact","email","onClick","loggedOut","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onDeleteCard","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","link","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","onCardList","avatar","about","map","PopupWithForm","isOpen","onClose","title","popupName","formName","children","onSubmit","method","AddPlacePopup","onAddCard","useState","setName","setLink","useEffect","e","preventDefault","id","placeholder","required","minLength","maxLength","onChange","target","value","EditProfilePopup","onUpdateUser","description","setDescription","EditAvatarPopup","onUpdateAvatar","inputAvatarRef","useRef","current","ref","ImagePopup","api","config","this","_url","url","_headers","headers","fetch","body","JSON","stringify","then","res","ok","json","Promise","reject","status","cardId","like","ProtectedRoute","Component","component","loggedIn","withRouter","password","setPassword","setEmail","handleSubmit","event","handleLogin","evt","handleRegister","InfoTooltip","isRequestSuccessful","successPath","failPath","closePath","BASE_URL","App","history","useHistory","isEditAvatarPopupOpen","setIsOpenPopupAvatar","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","selectedCard","setSelectedCard","imageData","setImageData","cards","setCards","setCurrentUser","setLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","setisRequestSuccessful","closeAllPopups","handleCheckToken","token","jwt","localStorage","getItem","data","push","catch","err","console","log","all","getUserInfoFromServer","getCardsInformation","error","Provider","removeItem","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","auth","setItem","userData","setUserInfoOnServer","editProfileAvatar","cardData","addCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,MAA0B,iC,cC+B1BA,MA3Bf,SAAgBC,GAEd,IAAMC,EACJ,sBAAKC,UAAU,oBAAf,UACI,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACM,cAAC,IAAD,CAASD,UAAU,eAAeE,GAAG,WAArC,8CAEJ,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACI,cAAC,IAAD,CAASD,UAAU,eAAeE,GAAG,WAArC,kFAEJ,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAlB,SACI,sBAAKD,UAAU,oBAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BF,EAAMM,QACpC,wBAAQJ,UAAU,wBAAwBK,QAASP,EAAMQ,UAAzD,oDAMhB,OACE,yBAAQN,UAAU,SAAlB,UACI,qBAAKA,UAAU,OAAOO,IAAKC,EAAMC,IAAI,gGACpCV,MChBMW,MARf,WACE,OACE,wBAAQV,UAAU,SAAlB,SACI,mBAAGA,UAAU,oBAAb,0CCHKW,EAAqBC,IAAMC,gBC8CzBC,MA7Cf,YAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAErCC,EAAcP,IAAMQ,WAAWT,GAG/BU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IAGvCC,EAAyB,iCACLH,EAAQ,iCAAmC,iCAI/DI,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAGrDM,EAAuB,+BAA4BJ,EAAU,8BAAgC,IAcnG,OACI,sBAAKzB,UAAU,mBAAf,UACA,wBAAQ8B,KAAK,SAAS9B,UAAWwB,EAA2BnB,QANhE,WACFa,EAAaH,MAMP,qBAAKf,UAAU,oBAAoBO,IAAKQ,EAAKgB,KAAMtB,IAAKM,EAAKiB,KAAM3B,QAfvE,WACIW,EAAYD,MAeR,sBAAKf,UAAU,wBAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmCe,EAAKiB,OACxC,sBAAKhC,UAAU,yBAAf,UACI,wBAAQ8B,KAAK,SAAS9B,UAAW6B,EAAyBxB,QAf1E,WACFY,EAAWF,MAeO,sBAAMf,UAAU,yBAAhB,SAA0Ce,EAAKW,MAAMO,mBCH1DC,MAlCf,YAA+G,IAA/FC,EAA8F,EAA9FA,aAAcC,EAAgF,EAAhFA,cAAeC,EAAiE,EAAjEA,WAAYrB,EAAqD,EAArDA,YAAasB,EAAwC,EAAxCA,WAAYrB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAEpFC,EAAcP,IAAMQ,WAAWT,GAErC,OACI,uBAAMX,UAAU,UAAhB,UACI,0BAASA,UAAU,UAAnB,UACK,qBAAKA,UAAU,4BAA4BK,QAAS8B,EAApD,SACG,qBAAKnC,UAAU,uBAAuBO,IAAKY,EAAYoB,OAAQ9B,IAAI,0EAEvE,sBAAKT,UAAU,gBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCmB,EAAYa,OAC5C,mBAAGhC,UAAU,oBAAb,SAAkCmB,EAAYqB,QAC9C,wBAAQV,KAAK,SAAS9B,UAAU,oBAAoBK,QAAS+B,OAEjE,wBAAQN,KAAK,SAAS9B,UAAU,mBAAmBK,QAASgC,OAEhE,yBAASrC,UAAU,aAAnB,SAEQsC,EAAWG,KAAI,SAAC1B,GAAD,OACX,cAAC,EAAD,CAEIA,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,aAAcA,GAJTH,EAAKQ,cCNvBmB,MAjBf,YAA8F,IAArEC,EAAoE,EAApEA,OAAQC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,SAC9E,OACE,qBAAKjD,UAAS,uBAAkB8C,EAAlB,YAA+BH,GAAU,gBAAvD,SACI,sBAAK3C,UAAU,mBAAf,UACI,wBAAQ8B,KAAK,SAAS9B,UAAU,mBAAmBK,QAASuC,IAC5D,sBAAK5C,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8B6C,IAC9B,uBAAMb,KAAK,OAAOkB,OAAO,OAAOlD,UAAS,6BAAwB+C,GAAYE,SAAUA,EAAvF,UACKD,EACD,wBAAQlB,KAAK,SAAS9B,UAAU,kBAAhC,gFC2DLmD,MAnEf,YAAwD,IAA/BR,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAAUQ,EAAY,EAAZA,UAAY,EAE3BxC,IAAMyC,SAAS,IAFY,mBAE5CrB,EAF4C,KAEtCsB,EAFsC,OAG3B1C,IAAMyC,SAAS,IAHY,mBAG5CtB,EAH4C,KAGtCwB,EAHsC,KA0BnD,OALH3C,IAAM4C,WAAU,WACTD,EAAQ,IACRD,EAAQ,MACV,CAACX,IAGC,eAAC,EAAD,CACIA,OAAQA,EACRC,QAASA,EACTC,MAAM,gEACNC,UAAU,SACVC,SAAS,cACTE,SApBR,SAAsBQ,GAClBA,EAAEC,iBACFN,EAAU,CACRpB,KAAMA,EACND,KAAMA,KAUR,UAQI,sBAAK/B,UAAU,eAAf,UACI,uBACI8B,KAAK,OACL6B,GAAG,oBACH3B,KAAK,OACL4B,YAAY,mDACZ5D,UAAU,kCACV6D,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,SAxChB,SAA0BP,GACtBH,EAAQG,EAAEQ,OAAOC,QAwCLA,MAAOlC,GAAc,KAEzB,sBAAM2B,GAAG,+BAEb,sBAAK3D,UAAU,eAAf,UACI,uBACI8B,KAAK,MACL6B,GAAG,mBACH3B,KAAK,OACL4B,YAAY,qGACZ5D,UAAU,iCACV6D,UAAQ,EACRG,SAjDd,SAA0BP,GACxBF,EAAQE,EAAEQ,OAAOC,QAiDLA,MAAOnC,GAAc,KAEzB,sBAAM4B,GAAG,kCCaVQ,MAzEf,YAA8D,IAAlCxB,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASwB,EAAgB,EAAhBA,aAEnCjD,EAAcP,IAAMQ,WAAWT,GAFoB,EAGjCC,IAAMyC,SAAS,IAHkB,mBAGlDrB,EAHkD,KAG5CsB,EAH4C,OAInB1C,IAAMyC,SAAS,IAJI,mBAIlDgB,EAJkD,KAIrCC,EAJqC,KAiCzD,OAxBA1D,IAAM4C,WAAU,WACZF,EAAQnC,EAAYa,MACpBsC,EAAenD,EAAYqB,SAC5B,CAACrB,IAsBA,eAAC,EAAD,CACIwB,OAAQA,EACRC,QAASA,EACTC,MAAM,4HACNC,UAAU,OACVC,SAAS,YACTE,SA1BR,SAAsBQ,GAElBA,EAAEC,iBAGFU,EAAa,CACTpC,KAAMA,EACNQ,MAAO6B,KAaX,UAQI,sBAAKrE,UAAU,eAAf,UACI,uBACI8B,KAAK,OACL6B,GAAG,mBACH3B,KAAK,YACLhC,UAAU,iCACV6D,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVG,MAAOlC,GAAc,GACrBgC,SA5BhB,SAA0BP,GACtBH,EAAQG,EAAEQ,OAAOC,UA6BT,sBAAMP,GAAG,8BAEb,sBAAK3D,UAAU,eAAf,UACI,uBACI8B,KAAK,OACL6B,GAAG,kBACH3B,KAAK,WACLhC,UAAU,gCACV6D,UAAQ,EAACC,UAAU,IACnBC,UAAU,MACVG,MAAOG,GAA4B,GACnCL,SArChB,SAAiCP,GAC7Ba,EAAeb,EAAEQ,OAAOC,UAsChB,sBAAMP,GAAG,iCCpCVY,MA/Bf,YAA+D,IAApC5B,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAAU4B,EAAiB,EAAjBA,eAEnCC,EAAiB7D,IAAM8D,OAAO,IASpC,OACI,cAAC,EAAD,CACI/B,OAAQA,EACRC,QAASA,EACTC,MAAM,wFACNC,UAAU,SACVC,SAAS,cACTE,SAdR,SAAsBQ,GAClBA,EAAEC,iBACFc,EAAe,CACXjC,OAAQkC,EAAeE,QAAQT,SAKnC,SAQI,uBACIlE,UAAU,0DACV8B,KAAK,MACLE,KAAK,SACL4C,IAAKH,EACLZ,UAAQ,OCfTgB,MAZf,YAAgD,IAA1B9D,EAAyB,EAAzBA,KAAM4B,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAChC,OACI,qBAAK5C,UAAS,6BAAwB2C,GAAU,gBAAhD,SACI,sBAAK3C,UAAU,mBAAf,UACI,wBAAQ8B,KAAK,SAAS9B,UAAU,mBAAmBK,QAASuC,IAC5D,qBAAK5C,UAAU,0BAA0BO,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,KAAMtB,IAAG,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,OACrE,oBAAIhC,UAAU,qBAAd,gBAAoCe,QAApC,IAAoCA,OAApC,EAAoCA,EAAMiB,a,gBCyH3C8C,EARH,I,WAxHR,WAAYC,GAAS,oBACjBC,KAAKC,KAAOF,EAAOG,IACnBF,KAAKG,SAAWJ,EAAOK,Q,qDAG3B,SAAkB7C,GACd,OAAO8C,MAAM,GAAD,OAAIL,KAAKC,KAAO,mBAAqB,CAC7C/B,OAAQ,QACRkC,QAASJ,KAAKG,SACdG,KAAMC,KAAKC,UAAU,CACjBjD,OAAQA,MAEbkD,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,mCAI7C,WACI,OAAOV,MAAM,GAAD,OAAIL,KAAKC,KAAO,YAAc,CACtC/B,OAAQ,MACRkC,QAASJ,KAAKG,WACfM,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI7C,WACI,OAAOV,MAAM,GAAD,OAAIL,KAAKC,KAAO,mBAAqB,CAC7C/B,OAAQ,MACRkC,QAASJ,KAAKG,WACfM,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI7C,SAAoB/D,EAAMQ,GACtB,OAAO6C,MAAM,GAAD,OAAIL,KAAKC,KAAO,YAAc,CACtC/B,OAAQ,QACRkC,QAASJ,KAAKG,SACdG,KAAMC,KAAKC,UAAU,CACjBxD,KAAMA,EACNQ,MAAOA,MAEZiD,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAI7C,WACI,OAAOV,MAAM,GAAD,OAAIL,KAAKC,KAAO,SAAW,CACnC/B,OAAQ,MACRkC,QAASJ,KAAKG,WACfM,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,sBAI7C,SAAS/D,EAAMD,GACX,OAAOsD,MAAM,GAAD,OAAIL,KAAKC,KAAO,SAAW,CACnC/B,OAAQ,OACRkC,QAASJ,KAAKG,SACdG,KAAMC,KAAKC,UAAU,CACjBxD,KAAMA,EACND,KAAMA,MAEX0D,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,wBAI7C,SAAWC,GACP,OAAOX,MAAM,GAAD,OAAIL,KAAKC,KAAO,UAAhB,OAA2Be,GAAU,CAC7C9C,OAAQ,SACRkC,QAASJ,KAAKG,WACfM,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,kCAK7C,SAAqBC,EAAQC,GACzB,OAAOZ,MAAM,GAAD,OAAIL,KAAKC,KAAO,gBAAhB,OAAiCe,GAAU,CACnD9C,OAAQ+C,EAAO,MAAQ,SACvBb,QAASJ,KAAKG,WACfM,MAAK,SAACC,GACL,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAQrC,CAAQ,CAChBb,IAAK,+CACLE,QAAS,CACL,cAAiB,uCACjB,eAAgB,sB,gBCjHTc,EATQ,SAAC,GAAyC,IAA5BC,EAA2B,EAAtCC,UAAyBtG,EAAa,6BAC9D,OACE,cAAC,IAAD,UAEI,kBAAMA,EAAMuG,SAAW,cAACF,EAAD,eAAerG,IAAY,cAAC,IAAD,CAAUI,GAAG,kBC6BxDoG,mBAjCf,SAAexG,GAAQ,IAAD,EACcc,IAAMyC,SAAS,IAD7B,mBACXkD,EADW,KACDC,EADC,OAEQ5F,IAAMyC,SAAS,IAFvB,mBAEXjD,EAFW,KAEJqG,EAFI,KAIlB,SAASC,EAAaC,GAClBA,EAAMjD,iBACDtD,GAAUmG,GAGfzG,EAAM8G,YAAYxG,EAAOmG,GAY7B,OACQ,sBAAKvG,UAAU,WAAf,UACI,oBAAIA,UAAU,kBAAd,sCACA,uBAAMA,UAAU,iBAAiBiD,SAAUyD,EAA3C,UACI,uBAAO1G,UAAU,kBAAkB4D,YAAY,QAAQ9B,KAAK,QAAQ+B,UAAQ,EAACC,UAAU,IAAII,MAAO9D,EAAO2D,UAAU,KAAKC,SAbxI,SAA2B6C,GACvBJ,EAASI,EAAI5C,OAAOC,UAaR,uBAAOlE,UAAU,kBAAkB4D,YAAY,uCAAS9B,KAAK,WAAW+B,UAAQ,EAACC,UAAU,IAAII,MAAOqC,EAAUxC,UAAU,KAAKC,SAV/I,SAA8B6C,GAC1BL,EAAYK,EAAI5C,OAAOC,UAUX,wBAAQpC,KAAK,SAAS9B,UAAU,wBAAwBiD,SAAUyD,EAAlE,qDCQLJ,mBAnCf,YAAqC,IAAlBQ,EAAiB,EAAjBA,eAAiB,EACAzD,mBAAS,IADT,mBACzBkD,EADyB,KACfC,EADe,OAENnD,mBAAS,IAFH,mBAEzBjD,EAFyB,KAElBqG,EAFkB,KAIhC,SAASC,EAAajD,GAClBA,EAAEC,iBACFoD,EAAe1G,EAAOmG,GACtBC,EAAY,IACZC,EAAS,IAWb,OACI,sBAAKzG,UAAU,WAAf,UACI,oBAAIA,UAAU,kBAAd,gFACA,uBAAMA,UAAU,iBAAiBiD,SAAUyD,EAA3C,UACI,uBAAO1G,UAAU,kBAAkB4D,YAAY,QAAQ9B,KAAK,QAAQ+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKG,MAAO9D,EAAO4D,SAZpI,SAA2B6C,GACvBJ,EAASI,EAAI5C,OAAOC,UAYZ,uBAAOlE,UAAU,kBAAkB4D,YAAY,uCAAS9B,KAAK,WAAW+B,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKG,MAAOqC,EAAUvC,SAT3I,SAA8B6C,GAC1BL,EAAYK,EAAI5C,OAAOC,UASf,wBAAQpC,KAAK,SAAS9B,UAAU,wBAAwBiD,SAAUyD,EAAlE,6HAEJ,sBAAK1G,UAAU,mBAAf,UACI,qJACA,cAAC,IAAD,CAAME,GAAG,UAAUF,UAAU,0BAA7B,sDChCD,MAA0B,oCCA1B,MAA0B,kCCA1B,MAA0B,uCCqB1B+G,MAhBf,SAAqBjH,GACjB,OACI,mCACA,qBAAKE,UAAS,gBAAWF,EAAM6C,OAAS,eAAiB,KAAzD,SACI,sBAAK3C,UAAU,2BAAf,UACI,qBAAKA,UAAU,uBAAuBO,IAAKT,EAAMkH,oBAAsBC,EAAcC,EAAUzG,IAAI,yCACnG,oBAAIT,UAAU,uBAAd,SAAsCF,EAAMkH,oBAAsB,wKAAmC,wMACrG,wBAAQhH,UAAU,8BAA8B8B,KAAK,QAAQzB,QAASP,EAAM8C,QAA5E,SACI,qBAAKrC,IAAK4G,EAAWnH,UAAU,6BAA6BS,IAAI,yDCbvE2G,EAAW,gCCqQTC,MAnPf,WAEI,IAAMC,EAAUC,cAFL,EAI2C3G,IAAMyC,UAAS,GAJ1D,mBAIJmE,EAJI,KAImBC,EAJnB,OAK6C7G,IAAMyC,UAAS,GAL5D,mBAKJqE,EALI,KAKoBC,EALpB,OAMwC/G,IAAMyC,UAAS,GANvD,mBAMJuE,EANI,KAMiBC,EANjB,OAO6BjH,IAAMyC,UAAS,GAP5C,mBAOJyE,EAPI,KAOUC,EAPV,OAQuBnH,IAAMyC,SAAS,MARtC,mBAQJ2E,EARI,KAQOC,EARP,OAUerH,IAAMyC,SAAS,IAV9B,mBAUJ6E,EAVI,KAUGC,EAVH,OAW4BvH,IAAMyC,SAAS,IAX3C,mBAWJlC,EAXI,KAWUiH,EAXV,OAaqBxH,IAAMyC,UAAS,GAbpC,mBAaJgD,EAbI,KAaMgC,EAbN,OAcuCzH,IAAMyC,UAAS,GAdtD,mBAcJiF,GAdI,KAceC,GAdf,QAee3H,IAAMyC,SAAS,IAf9B,qBAeJjD,GAfI,MAeGqG,GAfH,SAgB2C7F,IAAMyC,UAAS,GAhB1D,qBAgBJ2D,GAhBI,MAgBiBwB,GAhBjB,MAkGX,SAASC,KACLhB,GAAqB,GACrBE,GAAsB,GACtBE,GAAoB,GACpBE,EAAgB,MAChBQ,IAAqB,GA0CzB,SAASG,KACL,IDpHmBC,ECoHbC,EAAMC,aAAaC,QAAQ,OAC7BF,IDrHeD,ECsHDC,EDrHjBvD,MAAM,GAAD,OAAI+B,EAAJ,aAAyB,CACnClE,OAAQ,MACRkC,QAAS,CACP,OAAU,mBACV,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BuD,MAG9BlD,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,aC0G5BN,MAAK,SAACC,GACCA,IACA2C,GAAY,GACZ5B,GAASf,EAAIqD,KAAK3I,OAClBkH,EAAQ0B,KAAK,SAGpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAStB,OApJAtI,IAAM4C,WAAU,WACZqC,QAAQwD,IAAI,CAACvE,EAAIwE,wBAAyBxE,EAAIyE,wBACzC9D,MAAK,SAAAC,GAEF0C,EAAe1C,EAAI,IACnByC,EAASzC,EAAI,OAEhBuD,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,QACjC,IAwILtI,IAAM4C,WAAU,WACZkF,OACD,CAACrC,IAGA,sBAAKrG,UAAU,OAAf,UACI,eAACW,EAAmB8I,SAApB,CAA6BvF,MAAO/C,EAApC,UACI,cAAC,EAAD,CACIf,MAAOA,GACPE,UAjChB,WACI+H,GAAY,GACZ5B,GAASrG,IACTyI,aAAaa,WAAW,OACxBpC,EAAQ0B,KAAK,aA8BD3C,SAAUA,IAEV,eAAC,IAAD,WAEI,cAAC,EAAD,CACIlG,OAAK,EAACF,KAAK,IACXoG,SAAUA,EACVD,UAAWlE,EACXC,aAxJxB,WACIsF,GAAqB,IAwJDrF,cAjJxB,WACIuF,GAAsB,IAiJFtF,WAtJxB,WACIwF,GAAoB,IAsJA7G,YA1FxB,SAAyBD,GACrBgH,GAAgB,GAChBE,EAAalH,IAyFOuB,WAAY4F,EACZjH,WAjJxB,SAAwBF,GAEpB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAG3DuD,EAAI6E,qBAAqB5I,EAAKQ,KAAME,GAASgE,MAAK,SAACmE,GAEjD,IAAMC,EAAW3B,EAAMzF,KAAI,SAACqH,GAAD,OAAOA,EAAEvI,MAAQR,EAAKQ,IAAMqI,EAAUE,KAEjE3B,EAAS0B,MAEVZ,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,OAuIVhI,aApIxB,SAA0BH,GAEtB+D,EAAIiF,WAAWhJ,EAAKQ,KACfkE,MAAK,WACF0C,EAASD,EAAM8B,QAAO,SAAAF,GAAC,OAAIA,EAAEvI,MAAQR,EAAKQ,WAEjD0H,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,SAkId,cAAC,IAAD,CAAOjJ,KAAK,WAAZ,SACI,cAAC,EAAD,CAAO2G,YArEX,SAACxG,EAAOmG,IDnHP,SAACnG,EAAOmG,GAC7B,OAAOlB,MAAM,GAAD,OAAI+B,EAAJ,WAAuB,CAC/BlE,OAAQ,OACRkC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBE,KAAMC,KAAKC,UAAU,CAAEpF,QAAOmG,eAEjCd,MAAK,SAACC,GAOL,OANmB,MAAfA,EAAIK,QACJoD,QAAQC,IAAI,sIAEK,MAAf1D,EAAIK,QACNoD,QAAQC,IAAI,4IAEX1D,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAR,+CAAyBJ,EAAIK,aCmGtCkE,CAAe7J,EAAOmG,GACjBd,MAAK,SAACC,GACCA,EAAIiD,QACJN,GAAY,GACZQ,aAAaqB,QAAQ,MAAOxE,EAAIiD,OAChCrB,EAAQ0B,KAAK,SAGpBC,OAAM,SAACC,GACJC,QAAQC,IAAR,gDAAuBF,IACvBX,IAAqB,GACrBC,IAAuB,OAyDsB/B,SAAUA,OAG/C,cAAC,IAAD,CAAOxG,KAAK,WAAZ,SACI,cAAC,EAAD,CAAU6G,eAzFlC,SAAwB1G,EAAOmG,ID1HX,SAACnG,EAAOmG,GAC9B,OAAOlB,MAAM,GAAD,OAAI+B,EAAJ,WAAuB,CAC7BlE,OAAQ,OACRkC,QAAS,CACT,OAAU,mBACV,eAAgB,oBAEhBE,KAAMC,KAAKC,UAAU,CAAEpF,QAAOmG,eAEjCd,MAAK,SAACC,GAIL,OAHmB,MAAfA,EAAIK,QACNoD,QAAQC,IAAI,kMAET1D,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAR,+CAAyBJ,EAAIK,YAIzCN,MAAK,SAACC,GACL,OAAOA,MCwGLuE,CAAc7J,EAAOmG,GACpBd,MAAK,SAACC,GACCA,EAAIqD,OACJP,IAAuB,GACvBD,IAAqB,GACrBjB,EAAQ0B,KAAK,gBAGpBC,OAAM,SAACC,GACJC,QAAQC,IAAR,gDAAuBF,IACvBV,IAAuB,GACvBD,IAAqB,WAgFT,cAAC,IAAD,UACKlC,EAAW,cAAC,IAAD,CAAUnG,GAAG,MAAS,cAAC,IAAD,CAAUA,GAAG,kBAM3D,cAAC,EAAD,CACIyC,OAAQ+E,EACR9E,QAAS6F,GACTrE,aAjJhB,SAA0B+F,GACtBrF,EAAIsF,oBAAoBD,EAASnI,KAAMmI,EAAS3H,OAC3CiD,MAAK,SAAAC,GACF0C,EAAe1C,GACf+C,KACAA,QAEPQ,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,SA6ItB,cAAC,EAAD,CACIvG,OAAQ6E,EACR5E,QAAS6F,GACTjE,eA7IhB,SAA4B2F,GACxBrF,EAAIuF,kBAAkBF,EAAS5H,QAC1BkD,MAAK,SAAAC,GACF0C,EAAe1C,GACf+C,QAEPQ,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,SA0ItB,cAAC,EAAD,CACIvG,OAAQiF,EACRhF,QAAS6F,GACTrF,UAzIhB,SAA8BkH,GAE1BxF,EAAIyF,SAASD,EAAStI,KAAMsI,EAASvI,MAChC0D,MAAK,SAAA1E,GACFoH,EAAS,CAACpH,GAAF,mBAAWmH,KACnBO,QAEPQ,OAAM,SAACC,GAAD,OAASC,QAAQK,MAAMN,SAqItB,cAAC,EAAD,CACInI,KAAMiH,EACNrF,OAAQmF,EACRlF,QAAS6F,KAGb,cAAC,EAAD,CACIzB,oBAAqBA,GACrBrE,OAAQ2F,GACR1F,QAAS6F,QAMjB,cAAC,EAAD,QCpPG+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5bbf8a43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\nimport { BrowserRouter, NavLink, Route } from 'react-router-dom';\n\nfunction Header(props) {\n\n  const loginNavBar = (\n    <nav className='header__container'>\n        <Route path='/sign-up'>\n              <NavLink className='header__link' to='/sign-in'>Войти</NavLink>\n          </Route>\n          <Route path='/sign-in'>\n              <NavLink className='header__link' to='/sign-up'>Регистрация</NavLink>\n          </Route>\n          <Route exact path='/'>\n              <div className='header__container'>\n                  <p className='header__email'>{props.email}</p>\n                  <button className='header__button-logout' onClick={props.loggedOut}>Выйти</button>\n              </div>\n          </Route>\n    </nav>\n)\n\n  return (\n    <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"изображение лого\" /> \n        {loginNavBar}\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\"> \n        <p className=\"footer__copyright\">&copy;&#160;2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onDeleteCard }) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n    `photo-grid__delete-btn ${isOwn ? 'photo-grid__delete-btn_visible' : 'photo-grid__delete-btn_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (`photo-grid__like-btn ${isLiked ? 'photo-grid__like-btn_active' : ''}`);\n\n    function handleCardClick() {\n        onCardClick(card);\n    } \n\n    function handleLikeClick() {\n\t\tonCardLike(card);\n    }\n\n    function handleDeleteClick() {\n\t\tonDeleteCard(card);\n    }\n\n    return (\n        <div className=\"photo-grid__item\">\n        <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n        <img className=\"photo-grid__image\" src={card.link} alt={card.name} onClick={handleCardClick} />\n            <div className=\"photo-grid__rectangle\">\n                <h2 className=\"photo-grid__title\">{card.name}</h2>\n                <div className=\"photo-grid__like-place\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                    <span className=\"photo-grid__like-count\">{card.likes.length}</span>\n                </div>\n            </div> \n        </div>    \n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardList, onCardLike, onDeleteCard }) {\n    \n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                 <div className=\"profile__avatar-container\" onClick={onEditAvatar}>                    \n                    <img className=\"profile__avatar-icon\" src={currentUser.avatar} alt=\"фото аватара\" />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__title\">{currentUser.name}</h1>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                    <button type=\"button\" className=\"profile__edit-btn\" onClick={onEditProfile}></button>\n                </div>\n                <button type=\"button\" className=\"profile__add-btn\" onClick={onAddPlace} />\n            </section>\n            <section className=\"photo-grid\">\n                { \n                    onCardList.map((card) => (\n                        <Card \n                            key={card._id}\n                            card={card}\n                            onCardClick={onCardClick}\n                            onCardLike={onCardLike}\n                            onDeleteCard={onDeleteCard}\n                        />))           \n                }\n            </section>\n        </main>       \n    );\n\n}\n\nexport default Main;","import React from 'react';\n\nfunction PopupWithForm({ isOpen, onClose, title, popupName, formName, children, onSubmit  }) {\n  return (\n    <div className={`popup popup__${popupName} ${isOpen && \"popup_opened\"}`}>\n        <div className=\"popup__container\">\n            <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n            <div className=\"popup__content\">\n                <h2 className=\"popup__title\">{title}</h2>\n                <form name=\"edit\" method=\"POST\" className={`popup__form popup__${formName}`} onSubmit={onSubmit}>\n                    {children}\n                    <button type=\"submit\" className=\"popup__save-btn\">Сохранить</button> \n                </form>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose,  onAddCard}) {\n      \n    const [name, setName] = React.useState(\"\");\n    const [link, setLink] = React.useState(\"\");\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n    \n      function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onAddCard({\n          name: name,\n          link: link\n        });\n    }\n\n\tReact.useEffect(() => { \n        setLink(\"\");\n        setName(\"\");\n  \t}, [isOpen]); \n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Новое место\"\n            popupName=\"update\"\n            formName=\"form_update\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-title-input\" \n                    name=\"name\" \n                    placeholder=\"Название\" \n                    className=\"popup__input popup__input_title\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"30\"\n                    onChange={handleChangeName}  \n                    value={name ? name : \"\"}  \n                />\n                <span id=\"empty-title-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"url\" \n                    id=\"empty-link-input\" \n                    name=\"link\" \n                    placeholder=\"Ссылка на картинку\" \n                    className=\"popup__input popup__input_link\" \n                    required\n                    onChange={handleChangeLink} \n                    value={link ? link : \"\"}\n                />   \n                <span id=\"empty-link-input-error\"></span> \n            </div> \n        </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from '../components/PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  \n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({ \n            name: name, \n            about: description });\n    }\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Редактировать профиль\"\n            popupName=\"edit\"\n            formName=\"form_edit\"\n            onSubmit={handleSubmit}\n        >\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-name-input\"\n                    name=\"nameInput\" \n                    className=\"popup__input popup__input_name\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"40\"\n                    value={name ? name : \"\"}\n                    onChange={handleChangeName}\n                />\n                <span id=\"empty-name-input-error\"></span> \n            </div>\n            <div className=\"popup__field\">\n                <input \n                    type=\"text\" \n                    id=\"empty-job-input\" \n                    name=\"jobInput\" \n                    className=\"popup__input popup__input_job\" \n                    required minLength=\"2\" \n                    maxLength=\"200\"\n                    value={description ? description : \"\"}\n                    onChange={handleChangeDescription} \n                />\n                <span id=\"empty-job-input-error\"></span>  \n            </div>\n        </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose,  onUpdateAvatar}) {\n  \n    const inputAvatarRef = React.useRef(\"\");\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onUpdateAvatar({ \n            avatar: inputAvatarRef.current.value  \n        });\n    }\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            title=\"Обновить аватар\"\n            popupName=\"avatar\"\n            formName=\"form_update\"\n            onSubmit={handleSubmit}\n        >\n            <input \n                className=\"popup__input popup__input_link-avatar popup__input_link\" \n                type=\"url\" \n                name=\"avatar\" \n                ref={inputAvatarRef}\n                required \n            />   \n        </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nfunction ImagePopup({ card, isOpen, onClose }) {\n    return (\n        <div className={`popup popup__photo ${isOpen && \"popup_opened\"}`}>\n            <div className=\"popup__container\">\n                <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n                <img className=\"popup__photo-fullscreen\" src={card?.link} alt={card?.name} />\n                <h2 className=\"popup__photo-title\">{card?.name}</h2>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    editProfileAvatar(avatar) {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"PATCH\",\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: avatar\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getUserInfoFromServer() {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getAvatarFromServer() {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    setUserInfoOnServer(name, about) {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getCardsInformation() {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    addCards(name, link) {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}${'cards/'}${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,   \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n\n    changeLikeCardStatus(cardId, like) {\n        return fetch(`${this._url}${'cards/likes/'}${cardId}`, {\n            method: like ? \"PUT\" : \"DELETE\",\n            headers: this._headers      \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n}\n\n\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n    headers: {\n        \"Authorization\": \"6b4f0e7a-6b81-4fab-971b-4da07f00c7c0\",\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Login(props) {\n    const [password, setPassword] = React.useState('')\n    const [email, setEmail] = React.useState('')\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        if (!email || !password){\n            return\n        }\n        props.handleLogin(email, password)\n    }\n    \n    function handleChangeEmail(evt) {\n        setEmail(evt.target.value)\n    }\n\n    function handleChangePassword(evt) {\n        setPassword(evt.target.value)\n    }\n\n\n    return (\n            <div className='register'>\n                <h2 className='register__title'>Вход</h2>\n                <form className='register__form' onSubmit={handleSubmit} >\n                    <input className='register__input' placeholder='email' type='email' required minLength='2' value={email} maxLength='40' onChange={handleChangeEmail} />\n                    <input className='register__input' placeholder='Пароль' type='password' required minLength='2' value={password} maxLength='40' onChange={handleChangePassword} />\n                    <button type='submit' className='register__button-save' onSubmit={handleSubmit}>Войти</button>\n                </form>\n            </div>\n    )\n}\n\nexport default withRouter(Login);","import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nfunction Register({handleRegister}) {\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        handleRegister(email, password);\n        setPassword('');\n        setEmail('');\n    }\n\n    function handleChangeEmail(evt) {\n        setEmail(evt.target.value)\n    }\n\n    function handleChangePassword(evt) {\n        setPassword(evt.target.value)\n    }\n\n    return (\n        <div className='register'>\n            <h2 className='register__title'>Регистрация</h2>\n            <form className='register__form' onSubmit={handleSubmit}>\n                <input className='register__input' placeholder='email' type='email' required minLength='2' maxLength='40' value={email} onChange={handleChangeEmail}/>\n                <input className='register__input' placeholder='Пароль' type='password' required minLength='2' maxLength='40' value={password} onChange={handleChangePassword} />\n                <button type='submit' className='register__button-save' onSubmit={handleSubmit}>Зарегистрироваться</button>\n            </form>\n            <div className='register__signin'>\n                <p>Уже зарегистрированы?</p>\n                <Link to='sign-in' className='register__register-link'> Войти</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Register);","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/error.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/close_icon.0a2678e1.svg\";","import React from 'react';\nimport successPath from '../images/success.svg';\nimport failPath from '../images/error.svg';\nimport closePath from '../images/close_icon.svg';\n\nfunction InfoTooltip(props) {\n    return (\n        <>\n        <div className={`popup ${props.isOpen ? 'popup_opened' : ' '}`} >\n            <div className='popup__tooltip-container'>\n                <img className='popup__tooltip-image' src={props.isRequestSuccessful ? successPath : failPath} alt='Иконка' />\n                <h2 className='popup__tooltip-title'>{props.isRequestSuccessful ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h2>\n                <button className='popup__tooltip-close-button' type='reset' onClick={props.onClose}>\n                    <img src={closePath} className='popup__tooltip-close-image' alt='Закрыть' />\n                </button>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default InfoTooltip;","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n    })\n    .then((res) => {\n      if (res.status === 400) {\n        console.log('Некорректно заполнено одно из полей')\n      }\n      if (!res.ok) {\n          return Promise.reject(`Ошибка ${res.status}`)\n      }\n      return res.json()\n  })\n    .then((res) => {\n      return res\n    })\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ email, password })\n    })\n    .then((res) => {\n      if (res.status === 400) {\n          console.log('Не передано одно из полей')\n        }\n        if (res.status === 401) {\n          console.log('Пользователь с email не найден ')\n        }\n      if (!res.ok) {\n          return Promise.reject(`Ошибка ${res.status}`);\n      }\n      return res.json()\n  })\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n  })\n  .then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n}\n\n","import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport AddPlacePopup from '../components/AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from '../components/ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n\n    const history = useHistory();\n\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [imageData, setImageData] = React.useState(null)\n    \n    const [cards, setCards] = React.useState([])\n    const [currentUser,  setCurrentUser] = React.useState({}); \n\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [isRequestSuccessful, setisRequestSuccessful] = React.useState(false);\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfoFromServer(), api.getCardsInformation()])\n            .then(res => {\n                // console.log(res)\n                setCurrentUser(res[0]);\n                setCards(res[1]);\n            })\n            .catch((err) => console.error(err));\n      }, []);\n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true);\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch((err) => console.error(err));\n    } \n\n    function handleCardDelete(card) {\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter(c => c._id !== card._id));\n        })\n        .catch((err) => console.error(err));\n    }\n    \n    function handleUpdateUser(userData) {\n        api.setUserInfoOnServer(userData.name, userData.about)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups();\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.editProfileAvatar(userData.avatar)\n            .then(res => {\n                setCurrentUser(res);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        // console.log(cards);\n        api.addCards(cardData.name, cardData.link)\n            .then(card => {\n                setCards([card, ...cards]);\n                closeAllPopups()\n        })\n        .catch((err) => console.error(err))\n    }\n\n    function handleCardClick(card) {        \n        setSelectedCard(true);\n        setImageData(card);\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupAvatar(false);\n        setIsOpenPopupProfile(false);\n        setIsOpenPopupPlace(false);\n        setSelectedCard(null);\n        setIsInfoTooltipOpen(false)\n    }\n\n    function handleRegister(email, password) {\n        auth.register(email, password)\n        .then((res) => {\n            if (res.data) {\n                setisRequestSuccessful(true);\n                setIsInfoTooltipOpen(true);\n                history.push('/sign-in');\n            }\n        })\n        .catch((err) => {\n            console.log(`Ошибка: ${err}`);\n            setisRequestSuccessful(false);\n            setIsInfoTooltipOpen(true);\n        })\n    }\n\n    const handleLogin = (email, password) => {\n        auth.authorize(email, password)\n            .then((res) => {\n                if (res.token) {\n                    setLoggedIn(true);\n                    localStorage.setItem('jwt', res.token);\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n                setIsInfoTooltipOpen(true);\n                setisRequestSuccessful(false);\n            })\n    }\n    \n    function handleLogout() {\n        setLoggedIn(false)\n        setEmail(email)\n        localStorage.removeItem('jwt')\n        history.push('/sign-in')\n    }\n\n    function handleCheckToken() {\n        const jwt = localStorage.getItem('jwt')\n        if (jwt) {\n          auth.getContent(jwt)\n            .then((res) => {\n                if (res) {\n                    setLoggedIn(true)\n                    setEmail(res.data.email)\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n              console.log(err)\n            })\n        }\n    }\n    \n    React.useEffect(() => {\n        handleCheckToken()\n    }, [loggedIn])\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header \n                    email={email} \n                    loggedOut={handleLogout} \n                    loggedIn={loggedIn}\n                />\n                    <Switch>\n                        \n                        <ProtectedRoute\n                            exact path='/'\n                            loggedIn={loggedIn}\n                            component={Main}\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onCardClick={handleCardClick}\n                            onCardList={cards}\n                            onCardLike={handleCardLike}\n                            onDeleteCard={handleCardDelete}\n                        >\n                        </ProtectedRoute>\n\n                        <Route path='/sign-in'>\n                            <Login handleLogin={handleLogin} setEmail={setEmail} />\n                        </Route>\n\n                        <Route path='/sign-up'>\n                            <Register handleRegister={handleRegister} />\n                        </Route>\n\n                        <Route>\n                            {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                        </Route>\n                    </Switch>\n                    \n\n\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser}\n                /> \n\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar}\n                /> \n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddCard={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={imageData}\n                    isOpen={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <InfoTooltip \n                    isRequestSuccessful={isRequestSuccessful} \n                    isOpen={isInfoTooltipOpen} \n                    onClose={closeAllPopups} \n                />\n\n\n            </CurrentUserContext.Provider>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}